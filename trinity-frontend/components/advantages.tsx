'use client'

import { useEffect, useState } from 'react'
import { motion } from 'framer-motion'

interface Statistic {
  label: string;
  value: number;
  suffix: string;
  duration: number;
}

const statistics: Statistic[] = [
  { label: '–£—Å–ø–µ—à–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫', value: 15000, suffix: '+', duration: 2 },
  { label: '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤', value: 1000, suffix: '+', duration: 2 },
  { label: '–°—Ç—Ä–∞–Ω –¥–æ—Å—Ç–∞–≤–∫–∏', value: 25, suffix: '', duration: 1.5 },
  { label: '–õ–µ—Ç –æ–ø—ã—Ç–∞', value: 10, suffix: '+', duration: 1 }
];

const advantages = [
  {
    icon: 'üåç',
    title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Å–µ—Ç—å',
    description: '–ù–∞–¥–µ–∂–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –≤ –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–∫–∞—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏'
  },
  {
    icon: 'üöõ',
    title: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–ø–∞—Ä–∫',
    description: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º'
  },
  {
    icon: 'üì±',
    title: '–û–Ω–ª–∞–π–Ω –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ',
    description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–µ–±-—Å–∞–π—Ç'
  },
  {
    icon: 'üì¶',
    title: '–õ—é–±—ã–µ –≥—Ä—É–∑—ã',
    description: '–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≥—Ä—É–∑–æ–≤: –æ—Ç –æ–±—ã—á–Ω—ã—Ö –¥–æ –Ω–µ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö –∏ —Ç—Ä–µ–±—É—é—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π'
  },
  {
    icon: 'üèÜ',
    title: '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞',
    description: '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –≤—Å–µ–º –ø—É—Ç–∏ —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'
  },
  {
    icon: 'üí∞',
    title: '–í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã',
    description: '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —Ü–µ–Ω—ã –∏ –≥–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–∫–∏–¥–æ–∫ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'
  }
];

function Counter({ value, suffix, duration }: Statistic) {
  const [count, setCount] = useState(0);

  useEffect(() => {
    let startTime: number;
    let animationFrame: number;

    const animate = (timestamp: number) => {
      if (!startTime) startTime = timestamp;
      const progress = (timestamp - startTime) / (duration * 1000);

      if (progress < 1) {
        setCount(Math.floor(value * progress));
        animationFrame = requestAnimationFrame(animate);
      } else {
        setCount(value);
      }
    };

    animationFrame = requestAnimationFrame(animate);

    return () => {
      if (animationFrame) {
        cancelAnimationFrame(animationFrame);
      }
    };
  }, [value, duration]);

  return (
    <span className="text-4xl font-bold text-blue-900">
      {count.toLocaleString()}{suffix}
    </span>
  );
}

export default function Advantages() {
  return (
    <div className="py-16 bg-white">
      <div className="max-w-7xl mx-auto px-4">
        <h2 className="text-3xl font-bold text-center text-blue-900 mb-16">
          –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç Trinity Group
        </h2>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mb-16">
          {statistics.map((stat, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="text-center"
            >
              <Counter {...stat} />
              <p className="text-gray-600 mt-2">{stat.label}</p>
            </motion.div>
          ))}
        </div>

        {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {advantages.map((advantage, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, scale: 0.9 }}
              whileInView={{ opacity: 1, scale: 1 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="bg-gray-50 rounded-xl p-6 hover:shadow-lg transition-shadow"
            >
              <div className="text-4xl mb-4">{advantage.icon}</div>
              <h3 className="text-xl font-semibold text-blue-900 mb-2">
                {advantage.title}
              </h3>
              <p className="text-gray-600">{advantage.description}</p>
            </motion.div>
          ))}
        </div>

        {/* –ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ */}
      </div>
    </div>
  );
}
